---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: project
  labels:
    app: project
spec:
  replicas: 1
  selector:
    matchLabels:
      app: project
  template:
    metadata:
      labels:
        app: project
    spec:
      containers:
        - name: project
          image: "yeseong33/project:241008"
          ports:
            - containerPort: 8080
          readinessProbe:
            httpGet:
              path: '/actuator/health'
              port: 8080
            initialDelaySeconds: 10
            timeoutSeconds: 2
            periodSeconds: 5
            failureThreshold: 10
          livenessProbe:
            httpGet:
              path: '/actuator/health'
              port: 8080
            initialDelaySeconds: 120
            timeoutSeconds: 2
            periodSeconds: 5
            failureThreshold: 5

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: interest
  labels:
    app: interest
spec:
  replicas: 2
  selector:
    matchLabels:
      app: interest
  template:
    metadata:
      labels:
        app: interest
    spec:
      containers:
        - name: interest
          image: yeseong33/interest:241008
          ports:
            - containerPort: 8080
          readinessProbe:
            httpGet:
              path: '/actuator/health'
              port: 8080
            initialDelaySeconds: 10
            timeoutSeconds: 2
            periodSeconds: 5
            failureThreshold: 10
          livenessProbe:
            httpGet:
              path: '/actuator/health'
              port: 8080
            initialDelaySeconds: 120
            timeoutSeconds: 2
            periodSeconds: 5
            failureThreshold: 5

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: consultation
  labels:
    app: consultation
spec:
  replicas: 2
  selector:
    matchLabels:
      app: consultation
  template:
    metadata:
      labels:
        app: consultation
    spec:
      containers:
        - name: consultation
          image: yeseong33/consultation:241008
          ports:
            - containerPort: 8080
          readinessProbe:
            httpGet:
              path: '/actuator/health'
              port: 8080
            initialDelaySeconds: 10
            timeoutSeconds: 2
            periodSeconds: 5
            failureThreshold: 10
          livenessProbe:
            httpGet:
              path: '/actuator/health'
              port: 8080
            initialDelaySeconds: 120
            timeoutSeconds: 2
            periodSeconds: 5
            failureThreshold: 5

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: salesmanmatch
  labels:
    app: salesmanmatch
spec:
  replicas: 2
  selector:
    matchLabels:
      app: salesmanmatch
  template:
    metadata:
      labels:
        app: salesmanmatch
    spec:
      containers:
        - name: salesmanmatch
          image: yeseong33/salesmanmatch:241008
          ports:
            - containerPort: 8080
          readinessProbe:
            httpGet:
              path: '/actuator/health'
              port: 8080
            initialDelaySeconds: 10
            timeoutSeconds: 2
            periodSeconds: 5
            failureThreshold: 10
          livenessProbe:
            httpGet:
              path: '/actuator/health'
              port: 8080
            initialDelaySeconds: 120
            timeoutSeconds: 2
            periodSeconds: 5
            failureThreshold: 5

---
apiVersion: v1
kind: Service
metadata:
  name: project
  labels:
    app: project
spec:
  type: LoadBalancer  # 외부 접근을 위해 LoadBalancer 유형으로 변경
  ports:
    - port: 80          # 외부 포트 80
      targetPort: 8080  # 내부 컨테이너 포트 8080
      protocol: TCP
  selector:
    app: project

---
apiVersion: v1
kind: Service
metadata:
  name: interest
  labels:
    app: interest
spec:
  type: LoadBalancer  # 외부 접근을 위해 LoadBalancer 유형으로 변경
  ports:
    - port: 80
      targetPort: 8080
      protocol: TCP
  selector:
    app: interest

---
apiVersion: v1
kind: Service
metadata:
  name: consultation
  labels:
    app: consultation
spec:
  type: LoadBalancer  # 외부 접근을 위해 LoadBalancer 유형으로 변경
  ports:
    - port: 80
      targetPort: 8080
      protocol: TCP
  selector:
    app: consultation

---
apiVersion: v1
kind: Service
metadata:
  name: salesmanmatch
  labels:
    app: salesmanmatch
spec:
  type: ClusterIP  # 내부 접근용 ClusterIP 유지
  ports:
    - port: 80
      targetPort: 8080
      protocol: TCP
  selector:
    app: salesmanmatch