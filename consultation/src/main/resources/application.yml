spring:
  application:
    name: consultation
---
spring:
  profiles: default
  datasource:
    url: jdbc:h2:mem:consultationdb
    driverClassName: org.h2.Driver
    username: sa
    password:
  jpa:
    hibernate:
      ddl-auto: update
    show-sql: true
  h2:
    console:
      enabled: true
      path: /h2-console
  cloud:
    stream:
      kafka:
        binder:
          brokers: localhost:9092
      bindings:
        event-in:
          group: consultation
          destination: output-topic   # 입력 채널의 토픽을 'output-topic'으로 설정하여 'SalesmanMatched' 이벤트 수신
          contentType: application/json
        event-out:
          destination: input-topic    # 출력 채널의 토픽을 'input-topic'으로 설정하여 이벤트 발행
          contentType: application/json

logging:
  level:
    org.hibernate.type: trace
    org.springframework.cloud: debug

server:
  port: 8084
---
spring:
  profiles: docker
  datasource:
    url: jdbc:h2:mem:consultationdb
    driverClassName: org.h2.Driver
    username: sa
    password:
  jpa:
    hibernate:
      ddl-auto: update
    show-sql: true
  h2:
    console:
      enabled: true
      path: /h2-console
  cloud:
    stream:
      kafka:
        binder:
          brokers: my-kafka:9092
      bindings:
        event-in:
          group: consultation
          destination: output-topic
          contentType: application/json
        event-out:
          destination: input-topic
          contentType: application/json

logging:
  level:
    org.hibernate.type: trace
    org.springframework.cloud: debug

server:
  port: 8084